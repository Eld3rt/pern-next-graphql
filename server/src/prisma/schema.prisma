datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(200)
  email          String           @unique @db.VarChar(200)
  passhash       String           @db.VarChar(200)
  courseProgress CourseProgress[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@map("users")
}

model Course {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(200)
  description    String
  imageURL       String           @unique
  smallImageURL  String?          @unique
  mainColor      String          @db.VarChar(7) @default("#701437")
  duration       Int
  price          Float
  reducedPrice   Float
  level          String?
  prerequisites  String?
  offerMessage   String?
  slug           String           @unique
  tags           Tag[]
  topics         Topic[]
  courseProgress CourseProgress[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@map("courses")
}

model Lesson {
  id             Int              @id @default(autoincrement())
  position       Int
  name           String           @default("Урок") @db.VarChar(200)
  topic          Topic?           @relation(fields: [topicId], references: [id])
  topicId        Int?
  videoId        String           @unique
  videoDuration  Int
  slug           String
  courseProgress LessonProgress[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@map("lessons")
}

model CourseProgress {
  id             Int              @id @default(autoincrement())
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  course         Course           @relation(fields: [courseId], references: [id])
  courseId       Int
  lessonProgress LessonProgress[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@unique([userId, courseId])
}

model LessonProgress {
  id               Int            @id @default(autoincrement())
  courseProgress   CourseProgress @relation(fields: [courseProgressId], references: [id])
  courseProgressId Int
  lesson           Lesson         @relation(fields: [lessonId], references: [id])
  lessonId         Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  @@unique([courseProgressId, lessonId])
}

model Tag {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(200)
  course Course[]
}

model Topic {
  id       Int      @id @default(autoincrement())
  position Int
  name     String
  course   Course   @relation(fields: [courseId], references: [id])
  courseId Int
  lessons  Lesson[]
}
